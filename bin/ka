#!/usr/bin/python3 -u

import getopt, html, re, sys, time

from selenium import webdriver

if len(sys.argv) < 2:
    sys.exit('''-d: sort by date
-m: magnet only
-p 5: pages
-r regex: in magnet
-s 100: seeds
-u user
-z 500: size (MB)\n
query
-c tv/hd: category''')

g = getopt.getopt(sys.argv[1:], 'dc:mp:r:s:u:z:')
o = dict(g[0])
k = '+'.join(g[1])

if '-c' in o:
    b = 'https://katcr.co/category/%s/subcate/%s/page/%%s' % tuple(o['-c'].split('/'))
else:
    b = 'https://katcr.co/katsearch/page/%%s/%s' % k

r = '(?s)/user/(?P<user>.*?)/.*?' \
    + '/category/(?P<category>.*?)/.*?' \
    + '/subcate/(?P<subcat>.*?)/.*?' \
    + '/torrent/(?P<id>.*?)/.*?' \
    + '"(?P<magnet>magnet:.*?)".*?' \
    + '"Size">\s*(?P<size>.*?) (?P<unit>.*?)<.*?' \
    + '"Age".*?>\s*(?P<age>.*?)<.*?' \
    + '"Seed">\s*(?P<seed>.*?)<.*?' \
    + '"Leech">\s*(?P<leech>.*?)<'

l = []
z = ['b', 'k', 'm', 'g']

a = webdriver.FirefoxOptions()
a.add_argument('--headless')
f = webdriver.Firefox(options=a, service_log_path='/tmp/geckodriver.log')

for p in range(1, int(o['-p']) + 1 if '-p' in o else 2):
    c = 1
    h = ''
    u = b % p

    while True:
        try:
            f.get(u)
            h = html.unescape(f.page_source)

            print(u, file=sys.stderr)
            open('/tmp/ka.htm', 'w').write(h)

            if 'magnet:' in h:
                time.sleep(1)
                break
            else:
                time.sleep(2)
                f.refresh()
                time.sleep(2)

            if c == 5:
                raise Exception('Tried %s times.' % c)
            else:
                c += 1
        except:
            f.quit()
            raise

    for i in re.finditer(r, h):
        t = i.groupdict()

        m = float(t['size'].replace(',', '')) * 1024 ** (z.index(t['unit'][0].lower()) - 2)

        if '-r' in o and not re.search('(?i)' + o['-r'], t['magnet']) \
                or '-s' in o and int(t['seed'].replace(',', '')) < int(o['-s']) \
                or '-u' in o and not re.search('(?i)' + o['-u'], t['user']) \
                or '-z' in o and m < float(o['-z']):
            continue

        if t not in l:
            l.append(t)

f.quit()

if '-d' in o:
    l.sort(key=lambda t: int(t['id']), reverse=True)
else:
    l.sort(key=lambda t: int(t['seed']), reverse=True)

for t in reversed(l):
    if '-m' not in o:
        print('%s\n  %s, %s %s, %s/%s, %s, %s/%s' % (
            re.sub('  +', ' ', t['magnet']),
            t['age'],
            t['size'],
            t['unit'],
            t['seed'],
            t['leech'],
            t['user'].lower(),
            t['category'],
            t['subcat']))
    else:
        print(t['magnet'])
